c
expect { puts('foo') }.to output('foo').to_stdout
puts('foo')
output('foo').to_stdout
output(smolt.version)
smolt.version
output('smolt ' + Smolt::VERSION) == output(smolt.version)
output('smolt ' + Smolt::VERSION) == smolt.version
output('smolt ' + Smolt::VERSION)
'smolt ' + Smolt::VERSION
'smolt ' + Smolt::VERSION.to_s
output('smolt ' + Smolt::VERSION).to_stdout == smolt.version
output(Smolt::VERSION).to_stdout == smolt.version
output("fot\n").to_stdout
Smolt::VERSION.to_stdout
output(Smolt::VERSION).to_stdout
Smolt::VERSION
smolt.version
puts smolt.version
puts version
output(Smolt::VERSION).to_stdout
output(Smolt::VERSION)
smolt.version
Smolt::VERSION
smolt.version
smolt
version
c
ve
ve = smolt.version
v
v = smolt.version
smolt.version
v = smolt.version
smolt.version,include?(Smolt::VERSION)
smolt.version include?(Smolt::VERSION)
Smolt::VERSION
smolt.version
smolt
version
n
c
deps_array.each { |f| installed.include?(f) }
deps_array.each { |f| installed.include(f) }
installed.each {|f| installed.include?(f)}
installed.each do |formula|
installed - deps_array
installed.include?(deps_array[1])
installed.include?(deps_array[1[])
installed.include?(deps_array[0])
installed.include?(deps_array)
installed
deps_array
deps
c
JSON.parse(res.body)['dependencies']
JSON.parse(res.body['dependencies']
res.body["dependencies"]
res.body
uri
res.body['dependencies']
res
c
JSON.parse(res.body)["dependencies"]
JSON.parse(res.body)
n
c
JSON.parse(res.body)
res.body.to_array
res.body.to_a
res.body.to_i
res.body.split("\n")
res.body
uri
res
n
c
uri
res
n
c
n
@formatted_full
n
@installed_brews.grep(/#{brew}/)
n
brew_params(brew)
n
up
help
@formatted_diff
n
formatted_installed
n
diff_brews
dependent_brews
@no_deps_message
@installed_brews
@brew
n
c
smolt.full('formula')
n
c
smolt.full('formula')
smotl.full
n
c
smolt.full('formula')
smolt.full
smolt
brew_list
smolt.brew_list_mock
smolt.brew_list
n
method Smolt::CLI.brew_list
method Smolt::CLI.full
method Smolt.full
method smolt
method
catch
help
n
smolt
smotl
n
brew_deps_mock
brew_list_mock
n
